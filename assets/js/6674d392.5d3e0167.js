"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[856],{1196:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"tips-and-tricks/git-worktree","title":"Use git worktree","description":"You can use git worktree to create multiple working directories for the same repository. This is useful for parallel development, e.g., working on multiple features or bug fixes simultaneously without needing to switch branches in a single working directory.","source":"@site/docs/tips-and-tricks/git-worktree.md","sourceDirName":"tips-and-tricks","slug":"/tips-and-tricks/git-worktree","permalink":"/claude-code-handbook/tips-and-tricks/git-worktree","draft":false,"unlisted":false,"editUrl":"https://github.com/nikiforovall/claude-code-rules/edit/main/website/docs/tips-and-tricks/git-worktree.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"title":"Use git worktree","sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Use Extended Plan Mode","permalink":"/claude-code-handbook/tips-and-tricks/extended-plan-mode"},"next":{"title":"Commit Frequently","permalink":"/claude-code-handbook/tips-and-tricks/commit-frequently"}}');var o=r(4848),n=r(8453);const s={title:"Use git worktree",sidebar_position:3},a="Use git worktree for parallel development",l={},c=[];function d(e){const t={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsxs)(t.h1,{id:"use-git-worktree-for-parallel-development",children:["Use ",(0,o.jsx)(t.code,{children:"git worktree"})," for parallel development"]})}),"\n",(0,o.jsxs)(t.p,{children:["You can use ",(0,o.jsx)(t.code,{children:"git worktree"})," to create multiple working directories for the same repository. This is useful for parallel development, e.g., working on multiple features or bug fixes simultaneously without needing to switch branches in a single working directory."]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:"git worktree add ../feature-branch feature-branch\n"})})]})}function u(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,t,r)=>{r.d(t,{R:()=>s,x:()=>a});var i=r(6540);const o={},n=i.createContext(o);function s(e){const t=i.useContext(n);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),i.createElement(n.Provider,{value:t},e.children)}}}]);